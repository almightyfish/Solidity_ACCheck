╔══════════════════════════════════════════════════════════════════════════════╗
║                  智能合约污点分析工具 - 快速参考卡                              ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌─ 🚀 最快使用方式 ────────────────────────────────────────────────────────┐
│                                                                              │
│  1. 打开文件：all_in_one_analyzer.py                                         │
│                                                                              │
│  2. 修改配置（第28-32行）：                                                   │
│     SOLC_VERSION = "0.4.25"        # 你的solc版本                            │
│     KEY_VARIABLES = ["owner"]       # 要分析的变量                           │
│     CONTRACT_PATH = "your.sol"      # 你的合约路径                           │
│                                                                              │
│  3. 运行：python all_in_one_analyzer.py                                      │
│                                                                              │
│  4. 查看：analysis_output/final_report.html                                  │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 📁 关键文件 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  🌟 all_in_one_analyzer.py       一键完成所有分析（推荐）                    │
│  📖 ALL_IN_ONE使用说明.md        详细使用说明（必读）                        │
│  📘 开始使用.txt                  快速上手指南                               │
│  📚 INDEX.md                      文件索引和导航                             │
│  🎉 完成总结.md                   完整功能总结                               │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ ⚙️  配置说明 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  SOLC_VERSION                                                                │
│  ├─ "0.4.25"     对应 pragma solidity ^0.4.25                                │
│  ├─ "0.8.0"      对应 pragma solidity ^0.8.0                                 │
│  └─ "0.6.12"     对应 pragma solidity ^0.6.12                                │
│                                                                              │
│  KEY_VARIABLES                                                               │
│  ├─ 权限控制：["owner", "admin", "authorized"]                               │
│  ├─ 资金相关：["balance", "balances", "totalSupply"]                        │
│  └─ 状态控制：["paused", "locked", "initialized"]                           │
│                                                                              │
│  CONTRACT_PATH                                                               │
│  ├─ "MyContract.sol"              当前目录                                   │
│  ├─ "contracts/Token.sol"         相对路径                                   │
│  └─ "/path/to/Contract.sol"       绝对路径                                   │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 📊 输出文件 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  analysis_output/                                                            │
│  ├─ final_report.json             完整JSON报告                              │
│  ├─ final_report.html             可视化HTML报告 ⭐                          │
│  └─ intermediate/                 所有中间结果                              │
│     ├─ runtime_bytecode.hex       Runtime字节码                             │
│     ├─ bytecode_analysis.json     CFG和指令分析                             │
│     ├─ taint_analysis.jsonl       污点路径数据                              │
│     └─ source_mapping.json        源码映射关系                              │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 🎯 结果解读 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  ✅ 未检测到污点                                                             │
│     → 该变量相对安全，不受外部输入直接影响                                    │
│                                                                              │
│  ⚠️  检测到污点                                                              │
│     → 该变量可能被外部输入影响，需要人工检查                                  │
│     → 查看 risk_locations 找到具体风险代码                                   │
│     → 检查是否有 require 或 modifier 保护                                    │
│     → 没有保护 = 漏洞！需要修复                                              │
│     → 有保护 = 安全（假阳性）                                                │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 🔧 常见问题 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  Q: 找不到solc？                                                             │
│  A: pip install solc-select                                                  │
│     solc-select install 0.4.25                                               │
│     solc-select use 0.4.25                                                   │
│                                                                              │
│  Q: 编译失败？                                                               │
│  A: 检查SOLC_VERSION是否与pragma匹配                                         │
│                                                                              │
│  Q: 找不到变量？                                                             │
│  A: 检查KEY_VARIABLES拼写，变量名区分大小写                                  │
│                                                                              │
│  Q: 如何批量分析？                                                           │
│  A: 多次运行，每次修改配置和OUTPUT_DIR                                       │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 💡 使用技巧 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  1. 优先分析权限和资金相关变量                                                │
│  2. 重点关注 risk_locations 部分                                             │
│  3. 检查风险代码是否有访问控制                                                │
│  4. 修复后重新分析验证                                                       │
│  5. 使用不同OUTPUT_DIR保存多次分析结果                                        │
│  6. HTML报告更易读，JSON报告便于程序处理                                      │
│  7. 结合人工审计使用效果最佳                                                 │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 📖 学习路径 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  新手：                                                                      │
│  1. 开始使用.txt           快速了解                                          │
│  2. python all_in_one_analyzer.py   运行示例                                 │
│  3. ALL_IN_ONE使用说明.md  详细学习                                          │
│                                                                              │
│  进阶：                                                                      │
│  1. 完成总结.md            了解技术细节                                      │
│  2. README.md              完整功能说明                                      │
│  3. 源码映射使用指南.md    深度使用                                          │
│                                                                              │
│  高级：                                                                      │
│  1. README_污点分析.md     理论知识                                          │
│  2. 源码文件               自定义扩展                                        │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 🎨 终端图标说明 ─────────────────────────────────────────────────────────┐
│                                                                              │
│  ✅  安全/完成       ⚠️   警告/有风险      ⛔  危险/需修复                     │
│  ✏️   写操作         👁️   读操作          📄  源码相关                       │
│  💾  文件保存       🔄  处理中          ✓  成功                             │
│  ❌  错误/失败      📊  统计数据        🎯  重点关注                         │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 🔗 快速链接 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  工作目录：/Users/almightyfish/Desktop/AChecker/AC/bytecode_analysis         │
│                                                                              │
│  运行分析：cd 上述目录 && python all_in_one_analyzer.py                       │
│                                                                              │
│  查看报告：open analysis_output/final_report.html                            │
│                                                                              │
│  获取帮助：打开 INDEX.md 或 ALL_IN_ONE使用说明.md                             │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 📝 示例配置 ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  # 分析简单合约                                                              │
│  SOLC_VERSION = "0.4.25"                                                     │
│  KEY_VARIABLES = ["owner"]                                                   │
│  CONTRACT_PATH = "SimpleContract.sol"                                        │
│                                                                              │
│  # 分析代币合约                                                              │
│  SOLC_VERSION = "0.8.0"                                                      │
│  KEY_VARIABLES = ["balances", "totalSupply", "owner"]                       │
│  CONTRACT_PATH = "contracts/MyToken.sol"                                     │
│                                                                              │
│  # 分析DeFi合约                                                              │
│  SOLC_VERSION = "0.6.12"                                                     │
│  KEY_VARIABLES = ["owner", "paused", "totalLocked"]                         │
│  CONTRACT_PATH = "defi/StakingContract.sol"                                  │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

╔══════════════════════════════════════════════════════════════════════════════╗
║  💪 现在就开始保护您的智能合约吧！                                              ║
║  🔒 安全第一，预防为主！                                                       ║
╚══════════════════════════════════════════════════════════════════════════════╝

